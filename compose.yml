services:
  n8n:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        N8N_VERSION: ${N8N_VERSION}
    ports:
      - "${N8N_PORT}:${N8N_PORT}"
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_TRUST_PROXY=${N8N_TRUST_PROXY}
      - N8N_METRICS=${N8N_METRICS}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED}
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=${OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS}
      - DB_TYPE=${DB_TYPE}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${TZ}
      - EXECUTIONS_MODE=${EXECUTIONS_MODE}
      - QUEUE_BULL_REDIS_HOST=${QUEUE_BULL_REDIS_HOST}
      - QUEUE_BULL_REDIS_PORT=6379
    volumes:
      - ./n8n_data:/home/node/.n8n
    depends_on:
      - postgres
      - redis
    restart: always
    container_name: n8n
    networks:
      - n8n_network

  postgres:
    image: postgres:15
    ports:
      - "${REDIS_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - POSTGRES_DB=${DB_POSTGRESDB_DATABASE}
      - TZ=${TZ}
    volumes:
      - ./n8n_postgres:/var/lib/postgresql/data
    restart: always
    container_name: n8n_postgres
    networks:
      - n8n_network

  redis:
    image: redis:6
    ports:
      - "${QUEUE_BULL_REDIS_PORT}:6379"
    volumes:
      - ./n8n_redis:/data
    command: redis-server --appendonly yes
    restart: always
    container_name: n8n_redis
    networks:
      - n8n_network 

networks:
  n8n_network:
    driver: bridge